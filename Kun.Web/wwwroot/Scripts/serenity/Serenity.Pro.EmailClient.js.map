{"version":3,"file":"Serenity.Pro.EmailClient.js","sourceRoot":"","sources":["../EmailClient/MailboxFolderLink.tsx","../EmailClient/MailboxToolbar.tsx","../EmailClient/EmailService.ts","../EmailClient/MailboxLoginView.tsx","../EmailClient/HtmlIFrame.tsx","../EmailClient/MailViewer.tsx","../EmailClient/MailboxView.tsx","../EmailClient/EmailSuggestEditor.ts","../EmailClient/EmailContentEditor.ts","../EmailClient/EmailComposeDialog.ts"],"names":[],"mappings":"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","sourcesContent":["namespace Serenity.EmailClient {\r\n\r\n    export const folderIcons = {\r\n        \"inbox\": \"fa-inbox\",\r\n        \"sent\": \"fa-envelope-o\",\r\n        \"drafts\": \"fa-file-text-o\",\r\n        \"junk\": \"fa-filter\",\r\n        \"trash\": \"fa-trash-o\"\r\n    };\r\n\r\n    function folderIcon(folder: EmailFolder) {\r\n        return \"fa \" + (folderIcons[folder.Kind] || 'fa-folder-o');\r\n    }\r\n\r\n    export interface MailboxFolderLinkProps {\r\n        folder: EmailFolder;\r\n        activeFolder: string;\r\n    }\r\n\r\n    export function mailboxFolderName(folder: EmailFolder) {\r\n        return Q.tryGetText(\"Site.EmailClient.FolderNames.\" + folder.Kind) ||\r\n            folder.Name || folder.FullName || '';\r\n    }\r\n\r\n    export class MailboxFolderLink extends React.Component<MailboxFolderLinkProps> {\r\n\r\n        render(): React.ReactNode {\r\n            return (\r\n                <li>\r\n                    <a href={'#folder/' + encodeURIComponent(this.props.folder.FullName)}\r\n                        className={this.props.folder.FullName == this.props.activeFolder ? \"active\" : \"\"}>\r\n                        <i className={folderIcon(this.props.folder)}></i> <span>\r\n                            {mailboxFolderName(this.props.folder)}\r\n                            {this.props.folder.UnreadCount > 0 &&\r\n                                <span className=\"label label-primary pull-right\">\r\n                                    {this.props.folder.UnreadCount}\r\n                                </span>}\r\n                        </span>\r\n                    </a>\r\n                    {this.props.folder.SubFolders && \r\n                        <ul>\r\n                        {this.props.folder.SubFolders.map(sub =>\r\n                            <MailboxFolderLink folder={sub}\r\n                                activeFolder={this.props.activeFolder}\r\n                                key={sub.FullName} />)\r\n                        }\r\n                        </ul>\r\n                    }\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    export function mailboxFolderSelectPadding(folder: EmailFolder) {\r\n        var spc = \"\";\r\n        for (var i = 0; i < folder.FullName.split('.').length - 1; i++)\r\n            spc += \"\\xa0\\xa0\\xa0\\xa0\";\r\n        return spc;\r\n    }\r\n\r\n    export interface MailboxToolbarProps {\r\n        onCheckAll: () => void;\r\n        onToggleSeen: () => void;\r\n        allChecked: boolean;\r\n        onDelete: () => void;\r\n        onRefresh: () => void;\r\n        onMoveToFolder: (folder: string) => void;\r\n        folder: string;\r\n        flatFolderList: EmailFolder[];\r\n        page: number;\r\n        pageSize: number;\r\n        messageCount: number;\r\n        onChangePage: (page: number) => void;\r\n    }\r\n\r\n    export class MailboxToolbar extends React.Component<MailboxToolbarProps, {}> {\r\n\r\n        handleMoveToFolder(e: React.ChangeEvent<HTMLSelectElement>) {\r\n            e.target.value && this.props.onMoveToFolder(e.target.value);\r\n            e.target.value = \"\";\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"mailbox-controls\">\r\n                    <button type=\"button\" className=\"btn btn-default btn-sm checkbox-toggle\"\r\n                        onClick={e => this.props.onCheckAll()}>\r\n                        <i className={this.props.allChecked ? 'fa fa-check-square-o' : 'fa fa-square-o'}></i>\r\n                    </button>{' '}\r\n                    <div className=\"btn-group\">\r\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => this.props.onToggleSeen()}\r\n                            title={Q.text(\"Site.EmailClient.ToggleReadButton\")}>\r\n                            <i className=\"fa fa-star-o\"></i>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => this.props.onDelete()}\r\n                            title={Q.text(\"Site.EmailClient.DeleteButton\")}>\r\n                            <i className=\"fa fa-trash-o\"></i>\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => this.props.onRefresh()}\r\n                            title={Q.text(\"Site.EmailClient.RefreshButton\")}>\r\n                            <i className=\"fa fa-refresh\"></i>\r\n                        </button>{' '}\r\n                        <select style={{ padding: \"4px\", margin: \"0 4px\" }} onChange={e => this.handleMoveToFolder(e)}>\r\n                            <option value=\"\">{Q.text(\"Site.EmailClient.MoveToFolder\")}</option>\r\n                            {this.props.flatFolderList.filter(x => x.FullName != this.props.folder).map(x =>\r\n                                <option key={x.FullName} value={x.FullName}>\r\n                                    {mailboxFolderSelectPadding(x) + mailboxFolderName(x)}\r\n                                </option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"pull-right\">\r\n                        <span>{this.props.page * this.props.pageSize + 1}</span>\r\n                        -\r\n                        <span>{Math.min(this.props.page * this.props.pageSize + this.props.pageSize, this.props.messageCount)}</span>\r\n                        <span> / </span>\r\n                        <span>{this.props.messageCount}</span>{' '}\r\n                        <div className=\"btn-group\">\r\n                            <button type=\"button\" className=\"btn btn-default btn-sm\"\r\n                                onClick={e => this.props.onChangePage(this.props.page - 1)}>\r\n                                <i className=\"fa fa-chevron-left\"></i>\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn btn-default btn-sm\"\r\n                                onClick={e => this.props.onChangePage(this.props.page + 1)}>\r\n                                <i className=\"fa fa-chevron-right\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    export namespace EmailService {\r\n        export declare function Login(request: EmailLoginRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Signout(request: ServiceRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function UnreadCount(request: EmailUnreadCountRequest, onSuccess?: (response: EmailUnreadCountResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Suggest(request: EmailSuggestRequest, onSuccess?: (response: EmailSuggestResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Reply(request: EmailReplyRequest, onSuccess?: (response: EmailReplyResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Compose(request: EmailComposeRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function DeleteMessages(request: EmailDeleteRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ToggleSeen(request: EmailToggleSeenRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function Move(request: EmailMoveRequest, onSuccess?: (response: Serenity.ServiceResponse) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ListMessages(request: EmailListRequest, onSuccess?: (response: Serenity.ListResponse<EmailItem>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function ListFolders(request: Serenity.ServiceRequest, onSuccess?: (response: Serenity.ListResponse<EmailFolder>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n        export declare function RetrieveMessage(request: EmailRetrieveRequest, onSuccess?: (response: Serenity.RetrieveResponse<EmailItem>) => void, opt?: Q.ServiceOptions<any>): JQueryXHR;\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    import UI = Serenity.UI;\r\n\r\n    const quickSettingsItems = [\r\n        {\r\n            value: \"custom\",\r\n            text: \"Custom\",\r\n            settings: {\r\n                ImapHost: \"\",\r\n                ImapPort: 993,\r\n                ImapUsername: \"\",\r\n                SmtpHost: \"\",\r\n                SmtpPort: 465,\r\n                SmtpUsername: \"\",\r\n            }\r\n        },\r\n        {\r\n            value: \"gmail\",\r\n            text: \"Gmail\",\r\n            settings: {\r\n                ImapHost: \"imap.gmail.com\",\r\n                ImapPort: 993,\r\n                ImapUsername: \"yourusername@gmail.com\",\r\n                SmtpHost: \"smtp.gmail.com\",\r\n                SmtpPort: 465,\r\n                SmtpUsername: \"yourusername@gmail.com\",\r\n            }\r\n        },\r\n        {\r\n            value: \"outlook\",\r\n            text: \"Outlook / Hotmail\",\r\n            settings: {\r\n                ImapHost: \"imap-mail.outlook.com\",\r\n                ImapPort: 993,\r\n                ImapUsername: \"yourusername@outlook.com\",\r\n                SmtpHost: \"smtp-mail.outlook.com\",\r\n                SmtpPort: 587,\r\n                SmtpUsername: \"yourusername@outlook.com\",\r\n            }\r\n        },\r\n        {\r\n            value: \"yandex\",\r\n            text: 'Yandex',\r\n            settings: {\r\n                ImapHost: \"imap.yandex.com\",\r\n                ImapPort: 993,\r\n                ImapUsername: \"yourusername@yandex.com\",\r\n                SmtpHost: \"smtp.yandex.com\",\r\n                SmtpPort: 465,\r\n                SmtpUsername: \"yourusername@yandex.com\",\r\n            }\r\n        }\r\n    ];\r\n\r\n    export class MailboxLoginProps {\r\n        onLogin: () => void;\r\n    }\r\n\r\n    export class MailboxLoginView extends React.Component<MailboxLoginProps> {\r\n\r\n        private editorRefs = new UI.EditorRefs();\r\n\r\n        private loadQuickSettings(value: string) {\r\n            var item = Q.tryFirst(quickSettingsItems, x => x.value == value);\r\n            if (item)\r\n                this.editorRefs.loadFrom(item.settings, Object.keys(item.settings));\r\n        }\r\n\r\n        handleQuickSettingChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n            this.loadQuickSettings(e.target.value);\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.loadQuickSettings(\"gmail\");\r\n        }\r\n\r\n        login() {\r\n            var loginInfo: EmailLoginInfo = {};\r\n            this.editorRefs.saveTo(loginInfo);\r\n            delete loginInfo[\"QuickSettings\"];\r\n            EmailService.Login({\r\n                LoginInfo: loginInfo\r\n            }, response => {\r\n                this.props.onLogin();\r\n            });\r\n        }\r\n\r\n        private form: UI.Form;\r\n\r\n        render(): React.ReactNode {\r\n            var lt = (key: string) => Q.text(\"Site.EmailClient.\" + key);\r\n            var fieldProps = (name: string) => ({ name: name, caption: lt(name), setRef: this.editorRefs.set });\r\n            return (\r\n                <div className=\"s-MailboxLoginView\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <UI.Form ref={el => this.form = el}>\r\n                                <div className=\"box box-solid login-view-box\">\r\n                                    <div className=\"box-header with-border\">\r\n                                        <h3 className=\"box-title\">{Q.text(\"Site.EmailClient.LoginTitle\")}</h3>\r\n                                    </div>\r\n                                    <div className=\"box-body\">\r\n                                        <UI.PropertyGrid>\r\n\r\n                                            <UI.Field name=\"QuickSettings\" caption={lt(\"QuickSettings\")}\r\n                                                editor={edProps =>\r\n                                                    <select name={edProps.name} ref={edProps.ref} defaultValue=\"gmail\"\r\n                                                        onChange={this.handleQuickSettingChange}>\r\n                                                        {quickSettingsItems.map(x =>\r\n                                                            <option key={x.value} value={x.value}>{x.text}</option>)}\r\n                                                    </select>} />\r\n\r\n                                            <UI.Field {...fieldProps(\"ImapHost\") } required\r\n                                                editor={edProps => <StringEditor {...edProps} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"ImapPort\") } required\r\n                                                editor={edProps => <IntegerEditor {...edProps} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"ImapUsername\") } required\r\n                                                editor={edProps => <StringEditor {...edProps}\r\n                                                    onChange={e => this.editorRefs.get(\"SmtpUsername\").value =\r\n                                                        this.editorRefs.get(\"ImapUsername\").value} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"ImapPassword\") } required\r\n                                                editor={edProps => <PasswordEditor {...edProps}\r\n                                                    onChange={e => this.editorRefs.get(\"SmtpPassword\").value =\r\n                                                        this.editorRefs.get(\"ImapPassword\").value} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"SmtpHost\") } required\r\n                                                editor={edProps => <StringEditor {...edProps} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"SmtpPort\") } required\r\n                                                editor={edProps => <IntegerEditor {...edProps} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"SmtpUsername\") } required\r\n                                                editor={edProps => <StringEditor {...edProps} />} />\r\n\r\n                                            <UI.Field {...fieldProps(\"SmtpPassword\") } required\r\n                                                editor={edProps => <PasswordEditor {...edProps} />} />\r\n\r\n                                        </UI.PropertyGrid>\r\n                                    </div>\r\n                                    <div className=\"box-footer\" style={{ marginBottom: \"10px\" }}>\r\n                                        <button className=\"btn btn-success\" onClick={e => this.form.validateForm() && this.login()} type=\"button\">\r\n                                            {Q.text(\"Site.EmailClient.LoginButton\")}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </UI.Form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    export interface HtmlIFrameProps extends React.IframeHTMLAttributes<HTMLIFrameElement> {\r\n        contents: string;\r\n    }\r\n\r\n    export class HtmlIFrame extends React.Component<HtmlIFrameProps> {\r\n        private iframe: HTMLIFrameElement;\r\n\r\n        updateContents() {\r\n            var doc = this.iframe.contentDocument;\r\n            doc.open();\r\n            doc.write(this.props.contents || '');\r\n            doc.close();\r\n            var el = this.iframe;\r\n            $(el.contentDocument.body).removeAttr('oncontextmenu');\r\n            el.style.height = (Math.max(250, el.contentWindow.document.body.scrollHeight + 30)) + 'px';\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.updateContents();\r\n        }\r\n\r\n        componentWillReceiveProps(nextProps: HtmlIFrameProps) {\r\n            if (nextProps.contents !== this.props.contents)\r\n                this.updateContents();\r\n        }\r\n\r\n        render() {\r\n            var { contents, ...other } = this.props;\r\n            return (<iframe ref={el => this.iframe = el} {...other}></iframe>);\r\n        }\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    export interface MailViewerProps {\r\n        folder: string;\r\n        flatFolderList: EmailFolder[];\r\n        uid: number;\r\n        onClose: () => void;\r\n    }\r\n\r\n    export interface MailViewerState {\r\n        message: EmailItem;\r\n    }\r\n\r\n    export class MailViewer extends React.Component<MailViewerProps, MailViewerState> {\r\n        private loadTimeout: number;\r\n\r\n        constructor(props: MailViewerProps) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                message: {}\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.load();\r\n        }\r\n\r\n        componentWillReceiveProps(newProps: MailViewerProps) {\r\n            if (newProps.folder !== this.props.folder ||\r\n                newProps.uid !== this.props.uid)\r\n                this.load();\r\n        }\r\n\r\n        back() {\r\n            Q.Router.navigate(\"folder/\" + encodeURIComponent(this.props.folder), true);\r\n        }\r\n\r\n        loadMessage(folder: string, uid: number): PromiseLike<any> {\r\n\r\n            return EmailService.RetrieveMessage({\r\n                Folder: folder,\r\n                UniqueId: uid\r\n            }, response => {\r\n                this.setState({\r\n                    message: response.Entity\r\n                });\r\n            });\r\n        }\r\n\r\n        load() {\r\n            clearTimeout(this.loadTimeout);\r\n            this.loadTimeout = setTimeout(() => {\r\n                if (this.props.folder && this.props.uid != null)\r\n                    this.loadMessage(this.props.folder, this.props.uid);\r\n                else {\r\n                    this.setState({\r\n                        message: {}\r\n                    });\r\n                }\r\n            }, 500);\r\n        }\r\n\r\n        deleteMessage() {\r\n            Q.confirm(Q.text(\"Site.EmailClient.DeleteMessageConfirmation\"), () => {\r\n                EmailService.DeleteMessages({\r\n                    Folder: this.props.folder,\r\n                    UniqueIds: [this.props.uid]\r\n                }, response => {\r\n                    Q.notifyInfo(\"Site.EmailClient.DeleteMessageSuccess\");\r\n                    this.props.onClose();\r\n                    this.back();\r\n                });\r\n            });\r\n        }\r\n\r\n        moveToFolder(target: string) {\r\n            if (!target)\r\n                return;\r\n\r\n            EmailService.Move({\r\n                SourceFolder: this.props.folder,\r\n                UniqueIds: [this.props.uid],\r\n                TargetFolder: target\r\n            }, response => {\r\n                Q.notifySuccess(\"Site.EmailClient.MoveMessageSuccess\");\r\n                this.props.onClose();\r\n                this.back();\r\n            });\r\n        }\r\n\r\n        getDateText() {\r\n            return Q.formatDate(this.state.message.Date, \"dd.MM.yyyy HH:mm\");\r\n        }\r\n\r\n        reply(all?: boolean, forward?: boolean) {\r\n            EmailService.Reply({\r\n                Folder: this.props.folder,\r\n                UniqueId: this.props.uid,\r\n                ReplyToAll: all,\r\n                Forward: forward\r\n            }, response => {\r\n                var dlg = new EmailComposeDialog();\r\n                dlg.reply = response;\r\n                dlg.dialogOpen();\r\n            })\r\n        }\r\n\r\n        render() {\r\n            var hasMessage = !!this.state.message.UniqueId;\r\n            return (\r\n                <div className=\"s-MailViewer\">\r\n                    <div className=\"mail-actions\">\r\n                        <button type=\"button\" className=\"btn btn-warning btn-sm\" onClick={e => this.back()}>\r\n                            &nbsp;&nbsp;<i className=\"fa fa-arrow-left\"></i> {Q.text(\"Site.EmailClient.BackButton\")}&nbsp;&nbsp;\r\n                        </button>\r\n                        {' '}\r\n                        {hasMessage && <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={e => this.reply()}>\r\n                            <i className=\"fa fa-mail-reply\"></i> {Q.text(\"Site.EmailClient.ReplyButton\")}\r\n                        </button>}\r\n                        {' '}\r\n                        {hasMessage && <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => this.reply(true)}>\r\n                            <i className=\"fa fa-mail-reply-all\"></i> {Q.text(\"Site.EmailClient.ReplyAllButton\")}\r\n                        </button >}\r\n                        {' '}\r\n                        {hasMessage && <button type=\"button\" className=\"btn btn-default btn-sm\" onClick={e => this.reply(false, true)}>\r\n                            <i className=\"fa fa-mail-forward\"></i> {Q.text(\"Site.EmailClient.ForwardButton\")}\r\n                        </button >}\r\n                        {' '}\r\n                        {hasMessage && <select style={{ padding: \"4px\", position: \"relative\", top: \"2px\" }} onChange={e => this.moveToFolder(e.target.value)}>\r\n                            <option value=\"\">{Q.text(\"Site.EmailClient.MoveToFolder\")}</option>\r\n                            {this.props.flatFolderList.filter(x => x.FullName != this.props.folder).map(x =>\r\n                                <option key={x.FullName} value={x.FullName}>\r\n                                    {mailboxFolderSelectPadding(x) + mailboxFolderName(x)}\r\n                                </option>)}\r\n                        </select>}\r\n                        {' '}\r\n                        {hasMessage && <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={e => this.deleteMessage()}>\r\n                            <i className=\"fa fa-trash\"></i> {Q.text(\"Site.EmailClient.DeleteButton\")}\r\n                        </button>}\r\n                    </div>\r\n\r\n                    {hasMessage && <div className=\"mail-info\">\r\n                        <div className=\"date-from\">\r\n                            <span className=\"from\">{this.state.message.From}</span>{' '}\r\n                            <span className=\"date\">{this.getDateText()}</span>\r\n                        </div>\r\n                        <div className=\"subject\">\r\n                            {this.state.message.Subject}\r\n                        </div>\r\n                        <div className=\"to\">\r\n                            <label>{Q.text(\"Site.EmailClient.ToLabel\")}</label>{' '}<span className=\"to\">{this.state.message.To}</span>\r\n                        </div>\r\n                        {this.state.message.Cc && <div className=\"cc\">\r\n                            <label>{Q.text(\"Site.EmailClient.CCLabel\")}</label>{' '}<span className=\"cc\">{this.state.message.Cc}</span>\r\n                        </div>}\r\n                    </div>}\r\n\r\n                    {hasMessage && <HtmlIFrame src=\"\" className=\"message-body\" frameBorder=\"0\"\r\n                        contents={this.state.message.HtmlBody} />}\r\n\r\n                    {hasMessage && !!this.state.message.Attachments && !!this.state.message.Attachments.length && <div className=\"attachments\">\r\n                        <ul>\r\n                            {this.state.message.Attachments.map(att =>\r\n                                <li>\r\n                                    <a href={att.DownloadUrl} target=\"_blank\">\r\n                                        <i className=\"fa fa-file\"></i> {att.FileName}</a>\r\n                                </li>)}\r\n                        </ul>\r\n                    </div>}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","\r\nnamespace Serenity.EmailClient {\r\n\r\n    function flattenFolders(inside?: EmailFolder[]): EmailFolder[] {\r\n        var result = [];\r\n        inside = Q.coalesce(inside, []);\r\n        for (var k of inside) {\r\n            result.push(k);\r\n            if (k.SubFolders && k.SubFolders.length) {\r\n                for (var z of flattenFolders(k.SubFolders))\r\n                    result.push(z);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function findFolder(fullName: string, inside: EmailFolder[]): EmailFolder {\r\n        inside = inside || [];\r\n        for (var k of inside) {\r\n            if (k.FullName == fullName)\r\n                return k;\r\n\r\n            if (k.SubFolders && k.SubFolders.length) {\r\n                var sub = findFolder(fullName, k.SubFolders);\r\n                if (sub)\r\n                    return sub;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    interface FolderAndMsg {\r\n        folder?: string;\r\n        msg?: number;\r\n    }\r\n\r\n    function parseFolderAndMsg(hash: string): FolderAndMsg {\r\n        if (!hash)\r\n            return {};\r\n\r\n        if (hash.charAt(0) == '#')\r\n            hash = hash.substr(1);\r\n\r\n        var result: FolderAndMsg = {};\r\n        if (Q.startsWith(hash, 'folder/')) {\r\n            var folder = hash.substr('folder/'.length);\r\n            var idx = folder.lastIndexOf('/');\r\n            result.msg = -1;\r\n            if (idx < folder.length - 1) {\r\n                result.msg = parseInt(folder.substr(idx + 1), 10);\r\n                if (isNaN(result.msg)) {\r\n                    result.msg = -1;\r\n                }\r\n                else {\r\n                    folder = folder.substr(0, idx);\r\n                }\r\n            }\r\n\r\n            result.folder = decodeURIComponent(folder);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function formatDate(date: any, format?: string) {\r\n        return Q.formatDate(date, format || 'yyyy-MM-dd HH:mm');\r\n    }\r\n\r\n    export interface MailboxItem extends EmailItem {\r\n        __checked?: boolean;\r\n    }\r\n\r\n    export interface MailboxState {\r\n        showLogin: boolean;\r\n        folder: string;\r\n        folders: any[];\r\n        messageCount: number;\r\n        messages: MailboxItem[];\r\n        page: number;\r\n        pageSize: number;\r\n        viewingMessage: number;\r\n        newMessages: number,\r\n        containsText: string,\r\n        containsLock: 0\r\n    }\r\n\r\n    export class MailboxView extends React.Component<{}, MailboxState> {\r\n\r\n        private reloadTimeout: number = 0;\r\n        private element: HTMLElement;\r\n\r\n        constructor(props: {}, context?: any) {\r\n            super(props, context);\r\n\r\n            this.state = {\r\n                folder: \"\",\r\n                folders: [],\r\n                viewingMessage: -1,\r\n                newMessages: 0,\r\n                messages: [],\r\n                messageCount: 0,\r\n                page: 0,\r\n                pageSize: 20,\r\n                containsText: \"\",\r\n                containsLock: 0,\r\n                showLogin: false\r\n            };\r\n        }\r\n\r\n        private loadMessages() {\r\n            EmailService.ListMessages({\r\n                Folder: this.state.folder,\r\n                Skip: this.state.page * this.state.pageSize,\r\n                Take: this.state.pageSize,\r\n                ContainsText: this.state.containsText\r\n            },\r\n                respmsg => {\r\n                    this.setState({\r\n                        messages: (respmsg.Entities || []),\r\n                        messageCount: respmsg.TotalCount || 0\r\n                    });\r\n                },\r\n                {\r\n                    onError: (response: ServiceResponse) => this.serviceErrorHandler(response)\r\n                }\r\n            );\r\n        }\r\n\r\n        composeMessage() {\r\n            new EmailComposeDialog().dialogOpen();\r\n        }\r\n\r\n        serviceErrorHandler(response: ServiceResponse) {\r\n            if (response.Error && response.Error.Code == \"UnauthorizedAccess\") {\r\n                this.setState({\r\n                    showLogin: true\r\n                })\r\n            }\r\n            else {\r\n                Q.ErrorHandling.showServiceError(response.Error);\r\n            }\r\n        }\r\n\r\n        initialLoadFolders() {\r\n            EmailService.ListFolders({\r\n            }, response => {\r\n                for (var folder of response.Entities || []) {\r\n                    if (folder.FullName == \"INBOX\")\r\n                        $('#UnreadEmailCount').text(folder.UnreadCount || 0).toggle(folder.UnreadCount > 0);\r\n                }\r\n\r\n                var folderName: string;\r\n                if (window.location.hash && Q.startsWith(window.location.hash, \"#folder/\"))\r\n                    folderName = parseFolderAndMsg(window.location.hash).folder\r\n                else\r\n                    folderName = this.state.folder || (this.state.folders[0] || {}).FullName || \"INBOX\";\r\n\r\n                if (this.state.folder !== folderName) {\r\n                    this.setState({\r\n                        folders: response.Entities || [],\r\n                        folder: folderName\r\n                    }, () => this.loadMessages());\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        folders: response.Entities || [],\r\n                    });\r\n                }\r\n            },\r\n                {\r\n                    onError: (response: ServiceResponse) => this.serviceErrorHandler(response)\r\n                });\r\n        }\r\n\r\n        changeFolder(folder: string) {\r\n            this.setState({\r\n                folder: folder,\r\n                page: 0,\r\n                containsText: \"\"\r\n            }, () => this.loadMessages());\r\n        }\r\n\r\n        changePage(page: number) {\r\n            if (page < 0)\r\n                page = 0;\r\n            var maxPage = Math.floor(Math.max(this.state.messageCount - 1, 0) / (this.state.pageSize || 20));\r\n            if (page > maxPage)\r\n                page = maxPage;\r\n            if (this.state.page != page) {\r\n                this.setState({\r\n                    page: page\r\n                }, () => this.loadMessages());\r\n            }\r\n        }\r\n\r\n        setElement(el: HTMLElement) {\r\n            if (this.element) \r\n                $(this.element.parentElement).removeClass('route-handler').off('handleroute');\r\n\r\n            this.element = el;\r\n\r\n            if (this.element) {\r\n                $(this.element).addClass(\"route-handler\")\r\n                    .on(\"handleroute\", (e, args) => {\r\n                        var route: string = args.route || '';\r\n                        if (Q.startsWith(route, 'folder/')) {\r\n                            args.handled = true;\r\n                            var parsed = parseFolderAndMsg(route);\r\n                            var msg = parsed.msg;\r\n                            var folder = parsed.folder;\r\n\r\n                            if (this.state.folder != folder) {\r\n                                this.setState({\r\n                                    viewingMessage: -1\r\n                                }, () => this.changeFolder(folder));\r\n                            }\r\n\r\n                            if (this.state.viewingMessage != msg) {\r\n                                this.setState({\r\n                                    viewingMessage: msg\r\n                                });\r\n\r\n                                if (msg >= 0) {\r\n                                    var message = Q.tryFirst<any>(this.state.messages || [], x => x.UniqueId == msg);\r\n                                    if (message && !message.Seen) {\r\n                                        this.toggleSeen(message);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.initialLoadFolders();\r\n            Q.Router.resolve();\r\n        }\r\n\r\n        activeFolderName(): string {\r\n            if (!this.state.folder)\r\n                return \"\";\r\n\r\n            var folder = findFolder(this.state.folder, this.state.folders);\r\n            if (!folder)\r\n                return \"\";\r\n\r\n            return mailboxFolderName(folder);\r\n        }\r\n\r\n        setContainsText(newValue: string) {\r\n            if (newValue === this.state.containsText)\r\n                return;\r\n\r\n            this.setState({\r\n                containsText: newValue\r\n            });\r\n\r\n            clearTimeout(this.reloadTimeout);\r\n            this.reloadTimeout = window.setTimeout(() => {\r\n                this.setState({\r\n                    page: 0\r\n                }, () => this.loadMessages());\r\n            }, 500);\r\n        }\r\n\r\n        allChecked() {\r\n            return this.state.messages.length && !Q.any(this.state.messages, x => !x.__checked);\r\n        }\r\n\r\n        checkAll() {\r\n            var allChecked = this.allChecked();\r\n            this.setState({\r\n                messages: this.state.messages.map(x => $.extend({}, x, { __checked: !allChecked }))\r\n            });\r\n        }\r\n\r\n        deleteSelected() {\r\n            var selectedIds = this.state.messages.filter(x => x.__checked).map(x => x.UniqueId);\r\n            if (!selectedIds.length) {\r\n                Q.notifyWarning(Q.text(\"Site.EmailClient.DeleteNoSelectionWarning\"));\r\n                return;\r\n            }\r\n\r\n            Q.confirm(Q.format(Q.text(\"Site.EmailClient.DeleteSelectedConfirmation\"), selectedIds.length), () => {\r\n                EmailService.DeleteMessages({\r\n                    Folder: this.state.folder,\r\n                    UniqueIds: selectedIds\r\n                }, response => {\r\n                    Q.notifyInfo(Q.text(\"Site.EmailClient.DeleteSelectedSuccess\"));\r\n                    this.loadMessages();\r\n                });\r\n            });\r\n        }\r\n\r\n        moveToFolder(folder: string, message?: MailboxItem) {\r\n            if (!folder)\r\n                return;\r\n\r\n            var selected = message ? [message] : this.state.messages.filter(x => x.__checked);\r\n            if (!selected.length) {\r\n                Q.notifyWarning(Q.text(\"Site.EmailClient.MoveNoSelectionWarning\"));\r\n                return;\r\n            }\r\n\r\n            EmailService.Move({\r\n                SourceFolder: this.state.folder,\r\n                UniqueIds: selected.map(x => x.UniqueId),\r\n                TargetFolder: folder\r\n            }, response => {\r\n                Q.notifySuccess(Q.format(Q.text(\"Site.EmailClient.MoveSelectedSuccess\"), selected.length));\r\n                this.loadMessages();\r\n            });\r\n        }\r\n\r\n        getToolbarProps(): MailboxToolbarProps {\r\n            return {\r\n                allChecked: this.allChecked(),\r\n                flatFolderList: flattenFolders(this.state.folders),\r\n                folder: this.state.folder,\r\n                messageCount: this.state.messageCount,\r\n                onChangePage: (page) => this.changePage(page),\r\n                onCheckAll: () => this.checkAll(),\r\n                onDelete: () => this.deleteSelected(),\r\n                onMoveToFolder: (target) => this.moveToFolder(target),\r\n                onRefresh: () => this.refreshMessages(),\r\n                onToggleSeen: () => { this.toggleSeen() },\r\n                page: this.state.page,\r\n                pageSize: this.state.pageSize\r\n            };\r\n        }\r\n\r\n        setChecked(message: MailboxItem, value: boolean) {\r\n            if (!!message.__checked !== !!value) {\r\n                this.setState({\r\n                    messages: this.state.messages.map(x => x === message ? $.extend({}, x, { __checked: !!value }) : x)\r\n                });\r\n            }\r\n        }\r\n\r\n        toggleSeen(message?: MailboxItem) {\r\n            var selected = message ? [message] : this.state.messages.filter(x => x.__checked);\r\n            if (!selected.length) {\r\n                Q.notifyWarning(Q.text(\"Site.EmailClient.ToggleSeenNoSelectionWarning\"));\r\n                return;\r\n            }\r\n\r\n            var seen = Q.any<any>(selected, x => !x.Seen);\r\n            EmailService.ToggleSeen({\r\n                Folder: this.state.folder,\r\n                UniqueIds: selected.map(x => x.UniqueId),\r\n                Seen: seen\r\n            }, response => {\r\n                var folder = findFolder(this.state.folder, this.state.folders);\r\n                var unreadCount = folder ? (folder.UnreadCount || 0) : 0;\r\n                var messages = this.state.messages.map(x => {\r\n                    if (selected.indexOf(x) < 0 || seen == !!x.Seen)\r\n                        return x;\r\n\r\n                    if (folder) {\r\n                        unreadCount = Math.max(unreadCount + (seen ? -1 : 1), 0);\r\n                        if (folder.FullName == \"INBOX\")\r\n                            $('#UnreadEmailCount').text(unreadCount).toggle(unreadCount > 0);\r\n                    }\r\n\r\n                    return $.extend({}, x, { Seen: seen })\r\n                });\r\n\r\n                var folders = this.state.folders.map(x => {\r\n                    if (x !== folder)\r\n                        return x;\r\n\r\n                    return $.extend({}, x, { UnreadCount: unreadCount });\r\n                });\r\n\r\n                this.setState({\r\n                    messages: messages,\r\n                    folders: folders\r\n                })\r\n            });\r\n        }\r\n\r\n        refreshMessages() {\r\n            this.loadMessages();\r\n        }\r\n\r\n        signout() {\r\n            EmailService.Signout({}, response => this.setState({\r\n                showLogin: true,\r\n                folders: [],\r\n                folder: \"\"\r\n            }));\r\n        }\r\n\r\n        render() {\r\n\r\n            if (this.state.showLogin)\r\n                return <MailboxLoginView onLogin={() => this.setState({\r\n                    showLogin: false,\r\n                    folders: [],\r\n                    folder: \"\"\r\n                }, () => this.initialLoadFolders())} />\r\n\r\n            var toolbarProps = this.getToolbarProps();\r\n            return (\r\n                <div ref={el => this.setElement(el)} className=\"s-MailboxView\">\r\n                    <div className=\"mailbox\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <a href=\"javascript:;\" className=\"btn btn-primary btn-block margin-bottom\"\r\n                                    onClick={e => this.composeMessage()}>\r\n                                    <i className=\"fa fa-envelope-o\"></i> {Q.text(\"Site.EmailClient.ComposeButton\")}\r\n                                </a>\r\n\r\n                                <div className=\"box box-solid\">\r\n                                    <div className=\"box-header with-border\">\r\n                                        <h3 className=\"box-title\">{Q.text(\"Site.EmailClient.FoldersTitle\")}</h3>\r\n                                    </div>\r\n                                    <div className=\"box-body no-padding\">\r\n                                        {this.state.folders.map(fld =>\r\n                                            <ul className=\"nav nav-pills nav-stacked\" key={fld.FullName}>\r\n                                                <MailboxFolderLink folder={fld} activeFolder={this.state.folder} />\r\n                                            </ul>)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <button className=\"btn btn-small btn-danger pull-right\" onClick={e => this.signout()}>\r\n                                        <i className=\"fa fa-sign-out\"></i> {Q.text(\"Site.EmailClient.SignoutButton\")}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                {this.state.viewingMessage < 0 && <div className=\"box box-primary\">\r\n                                    <div className=\"box-header with-border\">\r\n                                        <h3 className=\"box-title\">{this.activeFolderName()}</h3>\r\n                                        <div className=\"box-tools pull-right\">\r\n                                            <div className=\"has-feedback\">\r\n                                                <input type=\"text\" className=\"form-control input-sm\" placeholder={Q.text(\"Site.EmailClient.SearchPlaceholder\")} value={this.state.containsText}\r\n                                                    onChange={e => this.setContainsText(e.target.value)} />\r\n                                                <span className=\"glyphicon glyphicon-search form-control-feedback\"></span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"box-body no-padding\">\r\n                                        {React.createElement(MailboxToolbar, toolbarProps)}\r\n\r\n                                        <div className=\"table-responsive mailbox-messages\" style={{minHeight: \"40px\"}}>\r\n                                            <table className=\"table table-hover table-striped mail-table\">\r\n                                                <tbody>\r\n                                                {this.state.messages.map(message =>\r\n                                                    <tr className={!message.Seen ? \"unseen\" : null} key={message.UniqueId}>\r\n                                                        <td className=\"mailbox-check\">\r\n                                                            <input type=\"checkbox\" checked={message.__checked} onClick={e => this.setChecked(message, (e.target as any).checked)} />\r\n                                                        </td>\r\n                                                        <td className=\"mailbox-star\">\r\n                                                            <a href=\"javascript:;\" onClick={e => this.toggleSeen(message)}>\r\n                                                                <i className={\"fa\" + (!message.Seen ? \" fa-star\": \"\") + (message.Seen ? \" fa-star-o\": \"\") + ' text-yellow'}></i>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                        <td className=\"mailbox-name\">\r\n                                                            <div>\r\n                                                                <a href={'#folder/' + encodeURIComponent(this.state.folder) + '/' + message.UniqueId}>\r\n                                                                    {message.From}\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"mailbox-subject\">\r\n                                                            <div>{message.Subject}</div>\r\n                                                        </td>\r\n                                                        <td className=\"mailbox-attachment\">\r\n                                                            {!!message.HasAttachments && <i className=\"fa fa-paperclip\"></i>}\r\n                                                        </td>\r\n                                                        <td className=\"mailbox-date\">\r\n                                                            <div>{formatDate(message.Date)}</div>\r\n                                                        </td>\r\n                                                    </tr>)}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"box-footer no-padding\">\r\n                                        {React.createElement(MailboxToolbar, toolbarProps)}\r\n                                    </div>\r\n                                </div>}\r\n                                {this.state.viewingMessage >= 0 && <div className=\"box box-primary\">\r\n                                    <div className=\"box-body\">\r\n                                        <MailViewer folder={this.state.folder} uid={this.state.viewingMessage}\r\n                                        onClose={() => this.refreshMessages()} flatFolderList={toolbarProps.flatFolderList} />\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    @Decorators.registerEditor(\"Serenity.EmailClient.EmailSuggestEditor\")\r\n    @Decorators.element('<input type=\"text\"/>')\r\n    export class EmailSuggestEditor extends Serenity.Widget<EmailSuggestEditorOptions> {\r\n\r\n        constructor(element: JQuery, opt: EmailSuggestEditorOptions) {\r\n            super(element, opt);\r\n\r\n            element.attr(\"autocomplete\", \"off\");\r\n\r\n            function split(val: string) {\r\n                return val.split(';');\r\n            }\r\n\r\n            function extractLast(term: string) {\r\n                return split(term).pop();\r\n            }\r\n\r\n            element.autocomplete({\r\n                minLength: 0,\r\n                source: function (request: any, response: any) {\r\n                    EmailService.Suggest({\r\n                        ContainsText: extractLast(request.term)\r\n                    }, r => {\r\n                        response(r.Suggestions);\r\n                    }, {\r\n                            onError: e => {\r\n                                response([]);\r\n                            }\r\n                        })\r\n                },\r\n                focus: function () {\r\n                    return false;\r\n                },\r\n                select: function (event, ui) {\r\n                    var terms = split(this.value);\r\n                    terms.pop();\r\n                    terms.push(ui.item.value);\r\n                    terms.push(\"\");\r\n                    this.value = terms.join(\"; \");\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    export interface EmailSuggestEditorOptions {\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    @Decorators.registerEditor(\"Serenity.EmailClient.EmailContentEditor\")\r\n    export class EmailContentEditor extends Serenity.HtmlContentEditor {\r\n\r\n        constructor(element: JQuery, opt: Serenity.HtmlContentEditorOptions) {\r\n            super(element, opt);\r\n        }\r\n\r\n        public getConfig(): Serenity.CKEditorConfig {\r\n            var config = super.getConfig() as any;\r\n            config.extraPlugins = (config.extraPlugins ? (config.extraPlugins + \",\") : \"\") + \"uploadimage,image2\";\n            config.removePlugins = (config.removePlugins ? (config.removePlugins + \",\") : \"\") + \"elementspath\";\r\n            config.imageUploadUrl = Q.resolveUrl(\"~/File/TemporaryUploadCK\");\r\n            config.fullPage = true;\r\n            config.allowedContent = true;\r\n            return config;\r\n        }\r\n    }\r\n}","namespace Serenity.EmailClient {\r\n\r\n    @Decorators.registerClass()\r\n    @Decorators.maximizable()\r\n    export class EmailComposeDialog extends Serenity.PropertyDialog<EmailComposeRequest, any> {\r\n\r\n        private form: EmailComposeForm = new EmailComposeForm(this.idPrefix);\r\n\r\n        constructor() {\r\n            super();\r\n\r\n            this.dialogTitle = Q.text(\"Site.EmailClient.NewEmailDialogTitle\");\r\n        }\r\n\r\n        protected getFormKey() {\r\n            return EmailComposeForm.formKey;\r\n        }\r\n\r\n        private _reply: EmailReplyResponse;\r\n\r\n        get reply(): EmailReplyResponse {\r\n            return this._reply;\r\n        }\r\n\r\n        set reply(value: EmailReplyResponse) {\r\n            if (this._reply != value) {\r\n                this._reply = value;\r\n\r\n                if (this._reply) {\r\n                    this.dialogTitle = Q.text(\"Site.EmailClient.ReplyEmailDialogTitle\");\r\n                    this.form.To.element.val(this._reply.To);\r\n                    this.form.Cc.element.val(this._reply.Cc);\r\n                    this.form.Subject.value = this._reply.Subject;\r\n                    this.form.BodyHtml.value = this._reply.ReplyBody;\r\n\r\n                    if (this._reply.Attachments) {\r\n                        this.form.Attachments.value = this._reply.Attachments.map(x => (<Serenity.UploadedFile>{\r\n                            Filename: x.DownloadUrl,\r\n                            OriginalName: x.FileName\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        protected getDialogButtons() {\r\n            return [\r\n                {\r\n                    text: Q.text(\"Site.EmailClient.SendButton\"),\r\n                    click: () => {\r\n                        if (!this.validateForm())\r\n                            return;\r\n\r\n                        var request = this.getSaveEntity();\r\n\r\n                        EmailService.Compose(request, response => {\r\n                            this.dialogClose();\r\n                        });\r\n                    }\r\n                },\r\n                {\r\n                    text: Q.text(\"Site.EmailClient.CancelButton\"),\r\n                    click: () => this.dialogClose()\r\n                }\r\n\r\n            ];\r\n        }\r\n\r\n        protected getDialogOptions() {\r\n            var opt = super.getDialogOptions();\r\n            opt.width = 960;\r\n            return opt;\r\n        }\r\n    }\r\n}"]}